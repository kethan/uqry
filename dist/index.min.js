var uqry=function(e){const r=(e,t)=>{if(e===t)return!0;if(null==e||null==t||typeof e!=typeof t)return!1;if("object"==typeof e){if(Array.isArray(e)!==Array.isArray(t))return!1;const n=Object.keys(e),i=Object.keys(t);return n.length===i.length&&n.every((n=>r(e[n],t[n])))}return!1},t=e=>"object"==typeof e&&!Array.isArray(e),n=e=>"string"==typeof e&&e.startsWith("$"),i={$eq:(e,t)=>r(e,t),$ne:(e,t)=>!r(e,t),$gt:(e,r)=>r>e,$gte:(e,r)=>r>=e,$lt:(e,r)=>r<e,$lte:(e,r)=>r<=e,$in:(e,r)=>r.some((r=>e.includes(r))),$nin:(e,r)=>!r.some((r=>e.includes(r))),$and:(e,r)=>e.every((e=>$(e)(r))),$or:(e,r)=>e.some((e=>$(e)(r))),$not:(e,r)=>!$(e)(r)},c={$add:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e+r),0),$subtract:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e-r)),$multiply:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e*r),1),$divide:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e/r)),$concat:(e,r)=>e.map((e=>u(e)(r))).join(""),$min:(e,r)=>Math.min(...e.map((e=>u(e)(r)))),$max:(e,r)=>Math.max(...e.map((e=>u(e)(r)))),$avg:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e+r),0)/e.length,$sum:(e,r)=>e.map((e=>u(e)(r))).reduce(((e,r)=>e+r),0),$cond:([e,r,t],n)=>u(e)(n)?u(r)(n):u(t)(n),$eq:([e,t],n)=>r(u(e)(n),u(t)(n)),$ne:([e,t],n)=>!r(u(e)(n),u(t)(n)),$gt:([e,r],t)=>u(e)(t)>u(r)(t),$gte:([e,r],t)=>u(e)(t)>=u(r)(t),$lt:([e,r],t)=>u(e)(t)<u(r)(t),$lte:([e,r],t)=>u(e)(t)<=u(r)(t),$in:([e,r],t)=>u(r)(t).includes(u(e)(t)),$nin:([e,r],t)=>!u(r)(t).includes(u(e)(t)),$and:(e,r)=>e.every((e=>u(e)(r))),$or:(e,r)=>e.some((e=>u(e)(r))),$not:(e,r)=>!u(e[0])(r)},s={$project:(e,r)=>{const i={};return Object.entries(e).forEach((([e,c])=>{1===c?i[e]=r[e]:(n(c)||t(c))&&(i[e]=u(c)(r))})),i},$match:(e,r)=>$(e)(r)?r:null,$group:({_id:e,...r},t)=>{const n=t.reduce(((t,n)=>{const i=u(e)(n);return t[i]||(t[i]={_id:i}),Object.entries(r).forEach((([e,r])=>{t[i][e]||(t[i][e]=[]),t[i][e].push(u(r)(n))})),t}),{});return Object.values(n).map((e=>(Object.entries(e).forEach((([r,t])=>{"_id"!==r&&(e[r]=c.$sum(t,{}))})),e)))},$sort:(e,r)=>{const[t,n]=Object.entries(e)[0];return r.sort(((e,r)=>e[t]>r[t]?n:-n))},$skip:(e,r)=>r.slice(e),$limit:(e,r)=>r.slice(0,e),$count:(e,r)=>[{[e]:r.length}]},$=e=>c=>t(e)?Object.entries(e).every((([e,r])=>n(e)?i[e](r,c):$(r)(c?.[e]))):r(c,e),u=e=>r=>{if(n(e))return r[e.slice(1)];if(t(e)){const[t,n]=Object.entries(e)[0];if(c[t])return c[t](Array.isArray(n)?n:[n],r)}return e};return e.add=(e,r)=>c[e]=r,e.aggregate=e=>r=>e.reduce(((e,r)=>{const[t,n]=Object.entries(r)[0];if(s[t])return["$group","$sort","$skip","$limit","$count"].includes(t)?s[t](n,e):e.map((e=>s[t](n,e))).filter(Boolean)}),r),e.expression=u,e.filter=$,e}({});